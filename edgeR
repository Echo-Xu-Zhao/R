library(limma)
library(edgeR)

## LikeDESeq2, import count data, use cpm to filter data
exprSet<- read.table(file = "/home/xu/RNAseq/edegR/D01357/D01357_counts", sep = "\t", header = TRUE, row.names = 1, stringsAsFactors = FALSE)

# exprSet <- exprSet[,1:21]
group_list <- factor(c(rep("D0",3),rep("D1",3),rep("D3",3),rep("D5",3),rep("D7",3)))
group_list
time_course <- relevel(group_list, ref = "D0") # reorder levels of factors
exprSet <- DGEList(counts = exprSet, group = time_course) # genes=genes
exprSet
dim(exprSet)

## only keeping a gene if it has a cpm of 1  or greater (100) for at least 3 samples
exprSet <- exprSet[rowSums(cpm(exprSet) > 1) >= 3,] # or just simply, use filterByExpr()
dim(exprSet)

## reset the library sizes
exprSet$samples$lib.size <- colSums(exprSet$counts) 
exprSet$samples

## TMM normalization, without this, the normailization factor (RNA composition) will be 1 as default value
exprSet <- calcNormFactors(exprSet, method="TMM")
exprSet

design <- model.matrix(~ time_course)
design

exprSet <- estimateDisp(exprSet, design) # NB dispersion
sqrt(exprSet$common.dispersion)
plotBCV(exprSet)

fit <- glmQLFit(exprSet, design, robust = TRUE)
plotQLDisp(fit)
fit <- glmQLFTest(fit, coef=2:5) # coef, To find genes different between any two of the groups:
tab <- as.data.frame(topTags(fit, n=nrow(exprSet)))
tab
summary(decideTests(fit, lfc = 1, p.value = 0.01)) # absolute logFC should be at least 1, p value less than 0.05 as cutoff of significance
write.table(tab, file = "D01357_qlf_timecourse", sep = "\t")

## DEG
fit <- glmQLFit(exprSet, design, robust = TRUE)
qlf.D1vsD0 <- glmQLFTest(fit, contrast = c(0,1,0,0,0)) # compare group2 vs 1, or any other group number vs group1, gruop 1 is always the reference
tTag <- topTags(qlf.D1vsD0, n=nrow(exprSet))
#diff_gene_edgeR <- subset(tTag$table, FDR < 0.05 & (logFC > 1 | logFC < -1))
#diff_gene_edgeR <- row.names(diff_gene_edgeR)
write.table(tTag$table, file = "D1vsD0_qlf_DGE", sep = "\t")

fit <- glmQLFit(exprSet, design, robust = TRUE)
qlf.D3vsD1 <- glmQLFTest(fit, contrast = c(0,-1,1,0,0)) # compare group3 vs 2
tTag <- topTags(qlf.D3vsD1, n=nrow(exprSet))
write.table(tTag$table, file = "D3vsD1_qlf_DGE", sep = "\t")

fit <- glmQLFit(exprSet, design, robust = TRUE)
qlf.D7vsD5 <- glmQLFTest(fit, contrast = c(0,0,0,-1,1)) # compare group4 vs 3
tTag <- topTags(qlf.D7vsD5, n=nrow(exprSet))
write.table(tTag$table, file = "D7vsD5_qlf_DGE", sep = "\t")

## RPKM or CPM
## extract gene length infor 
write.table(exprSet$counts, file = "exprSet_counts", sep = "\t", row.names = TRUE, col.names = TRUE) # extract expressed genes to get their gene length
length<- read.table(file = "/home/xu/RNAseq/edegR/D01357/exprSet_length", sep = "\t", header = TRUE, row.names = 1, stringsAsFactors = FALSE)

rpkm_nomalized <- rpkm(exprSet, gene.length=length$Length, normalized.lib.sizes=TRUE, log=FALSE) # prior.count=2, 
write.table(rpkm_nomalized, file = "D01357_qlf_rpkm", sep = "\t", row.names = TRUE, col.names = TRUE)

log_rpkm_nomalized <- rpkm(exprSet, gene.length=length$Length, prior.count=2, normalized.lib.sizes=TRUE, log=TRUE) 
write.table(log_rpkm_nomalized, file = "D01357_qlf_logrpkm", sep = "\t", row.names = TRUE, col.names = TRUE)


## heatmap map clusteing
logrpkm <- rpkm(exprSet, gene.length=length$Length, prior.count=2, normalized.lib.sizes=TRUE, log=TRUE)
rownames(logrpkm) <- exprSet$genes$Symbol
colnames(logrpkm) <- paste(exprSet$samples, sep="\t") # dimnames not inputed,it should be 1:21. Without dimnames, heatmap can show original sample name
logrpkm <- t(scale(t(logrpkm))) #scale each gene to have mean zero and standard deviation 

library(gplots)
col.pan <- colorpanel(100, "red", "white", "blue")
heatmap.2(logrpkm, col=col.pan, Rowv=TRUE, scale="none", labRow = NULL,
          trace="none", dendrogram="both", cexRow=1, cexCol=1.4, density.info="none", key = TRUE, keysize = TRUE,
          margin=c(10,9), lhei=c(2,10), lwid=c(2,6))
